{"version":3,"file":"entry-1e0d08c6.js","sources":["../app/framework-extensions/use-state-safe.ts","../app/framework-extensions/create-connect.tsx","../app/framework-extensions/with-vm.tsx","../app/todo-mvc/todos.dao.ts","../app/boundaries/local-storage/todos.dao.ts","../app/todo-mvc/todo-mvc.vm.ts","../app/todo-mvc/_footer.tsx","../app/todo-mvc/_header.tsx","../app/todo-mvc/_todo-list/_todo-item.tsx","../app/todo-mvc/_todo-list/todo-list.tsx","../app/todo-mvc/todo-mvc.tsx","../app/entry.tsx"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\nimport { Dispatch, SetStateAction, useState } from 'react';\r\n\r\n/**\r\n * let subscribe to mount status\r\n */\r\nconst useIsMount = (): React.RefObject<boolean> => {\r\n    const isMountRef = useRef(true);\r\n    useEffect(() => {\r\n        isMountRef.current = true;\r\n        return () => {\r\n            isMountRef.current = false;\r\n        };\r\n    });\r\n    return isMountRef;\r\n};\r\n/**\r\n * similar to useState, but setState is being invoked only if component is not yet unmounted\r\n */\r\nconst useStateSafe = <S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>] => {\r\n    const mountStatus = useIsMount();\r\n    const useStateResult = useState(initialState);\r\n\r\n    const setStateUnsafe = useStateResult[1];\r\n    const setStateSafe = (value: SetStateAction<S>) => {\r\n        // prevent calling setState on unmounted components\r\n        if (mountStatus.current) {\r\n            setStateUnsafe(value);\r\n        }\r\n    };\r\n\r\n    useStateResult[1] = setStateSafe;\r\n    return useStateResult;\r\n};\r\n\r\nexport { useStateSafe };\r\n","import * as React from 'react';\r\nimport * as mobxReact from 'mobx-react';\r\nimport { ReactComponent } from './additional-types';\r\nimport { IVMConstructor } from './wm-types';\r\n\r\nconst contextRegistry: {[key: string]: React.Context<any>} = {};\r\n\r\n/**\r\n * build connect function, which takes properties from the viewmodel, set into context of provided type\r\n * @param context - if not passed - create new react context and return in alongside the connect function\r\n */\r\nconst createConnect = <TVMData,>(\r\n    constructorType: IVMConstructor<any, TVMData>,\r\n)=> {\r\n    if(contextRegistry[constructorType.name]) {\r\n        throw new Error(`unable to create context for constructor '${constructorType.name}'. Context has been already created`);\r\n    }\r\n    \r\n    const context = React.createContext<TVMData>(null);\r\n    // todo: instead of using bold 'name' add some seed to the constructor dynamically on first createConnect call\r\n    contextRegistry[constructorType.name] = context;\r\n\r\n    // merge properties derived from context with own properties of compoent\r\n    return <TAllProps extends TVMProps & TOwnProps, TVMProps, TOwnProps = {}>(\r\n        ComponnetToConnect: ReactComponent<TAllProps>,\r\n        mapVMToProps: (contextData: TVMData, ownProps?: TOwnProps) => TVMProps) => {\r\n\r\n        const wrappedHOC = (ownProps: TOwnProps) => {\r\n            const ctxData = React.useContext(context);\r\n            // utilize useObserver instead of <Observer> in order to make react devtools more useful\r\n            const ObserverComponent = mobxReact.useObserver(() => {\r\n                const contextProps = mapVMToProps(ctxData, ownProps);\r\n\r\n                const fullProps = {\r\n                    ...ownProps,\r\n                    ...contextProps,\r\n                } as TAllProps;\r\n\r\n                return <ComponnetToConnect {...fullProps} />;\r\n            });\r\n            return ObserverComponent;\r\n        }\r\n\r\n        // for react devtools, sik. todo: don't apply in dev env\r\n        wrappedHOC.displayName = (ComponnetToConnect.displayName || ComponnetToConnect.name) + '_connected_' + constructorType.name;\r\n        return wrappedHOC;\r\n    }\r\n}\r\n\r\nexport { createConnect, contextRegistry };","import { default as React, useEffect } from 'react';\r\nimport { useStateSafe } from './use-state-safe';\r\nimport { ReactComponent } from './additional-types';\r\nimport { IViewModel, IVMConstructor } from './wm-types';\r\nimport { contextRegistry } from './create-connect';\r\nimport * as mobx from 'mobx';\r\n\r\n\r\n/**\r\n * make function, which bind the viewmodel to the component\r\n * Wraps react component by passing prepared viewmodel into it as a separate prop\r\n * Should be used if vmFactory is overriden if we want to utilize IoC container for viewmodel instances creation\r\n * Otherwise - use default 'withVM' function\r\n * @param vmFactory - factory, used for creation of the viewmodel from it's constructor and initial props passed to the component\r\n */\r\nconst makeWithVM = (\r\n    vmFactory: <TFactoryProps, TFactoryVM extends IViewModel<TFactoryProps>>(props: TFactoryProps, VMConstructor: IVMConstructor<TFactoryProps, TFactoryVM>) => TFactoryVM\r\n) => <TVM extends IViewModel<TProps>, TFullProps extends Record<TVMPropName,TVM> & TProps,TVMPropName extends string = never,  TProps = Record<string, unknown>>(\r\n    Component: ReactComponent<TFullProps>,\r\n    VMConstructor: IVMConstructor<TProps, TVM>,\r\n    vmPropName?: TVMPropName,\r\n    depsSelector?: (props: TProps) => any[],\r\n) => {\r\n    const vmHOC = (props: TProps) => {\r\n        const [viewModel, setViewModel] = useStateSafe<TVM>(null);\r\n\r\n        useEffect(() => {\r\n            if(viewModel && viewModel.onPropsChanged) {\r\n                viewModel.onPropsChanged(props);\r\n            }\r\n        });\r\n\r\n        let isComponentRemoved = false;\r\n        useEffect(() => {\r\n            const vm = vmFactory(props, VMConstructor);\r\n            const initializeResult = vm.initialize ? vm.initialize() : null;\r\n            \r\n            // if initialize return promise - await it first, then set viewmodel into component's state\r\n            if (initializeResult instanceof Promise) {\r\n                initializeResult.then(() => {\r\n                    if(!isComponentRemoved) {\r\n                        setViewModel(vm);\r\n                        // todo: doublecheck whether cleanup should be enforced here, likely it shouldn't as it is supposed to be cleaned up in \r\n                        // effect's return function \r\n                        // vm && vm.cleanup && vm.cleanup()\r\n                    }\r\n\r\n                    // let expection be propagated (if any). Exceptions, thrown within the lifecicle methods, is not a subject for handling within this hook\r\n                });\r\n            } else {\r\n                // if initialize return something other than promise or not exists - set viewmodel right away\r\n                setViewModel(vm);\r\n            }\r\n\r\n            return () => {\r\n                if(vm && vm.cleanup){\r\n                    vm.cleanup();\r\n                }\r\n\r\n                isComponentRemoved = true;\r\n            };\r\n        }, depsSelector ? depsSelector(props) : []);\r\n\r\n        if (viewModel) {\r\n            const propsWithVM = {\r\n                ...props,\r\n            } as TFullProps;\r\n\r\n            // if property is suppsed to be injected into the component, hosting the viewmodel - pass it as a new prop\r\n            if(vmPropName) {\r\n                // todo: investigate why \"Type 'IViewModel<TProps>' is not assignable to type 'TFullProps[TVMPropName]'\r\n                propsWithVM[vmPropName] = viewModel as any;\r\n            }\r\n\r\n            const ContextInstance = contextRegistry[VMConstructor.name];\r\n\r\n            return (\r\n                <ContextInstance.Provider value={viewModel}>\r\n                    <Component {...propsWithVM}/>\r\n                </ContextInstance.Provider>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    // todo: get rid of this while not in development env\r\n    vmHOC.displayName = Component.displayName || VMConstructor.name + '_host';\r\n\r\n    return vmHOC as unknown as React.FunctionComponent<Omit<TFullProps, TVMPropName>>;\r\n};\r\n\r\n\r\n/**\r\n * Create persistent viewmodel from react props.\r\n * Wraps react component into the context, which provide the instance of viewmodel\r\n * if 'vmPropName' parameter is present - pass viewmodel as a property to the Component\r\n * @param Component - component, which receive viewmodel in a prop named after 'vmPropName' argument if 'vmPropName' is provided\r\n * @param VMConstructor - constructor of the viewmodel. Viewmodel will be created using 'new' operator with this constructor\r\n *  and passing component's props as a first argument of the constructor\r\n * @param depsSelector - if returns an array - this array is passed to 'deps' argument of react's useEffect hook \r\n *  to let viewmodel be rebuilt if needed on specific props change. If does not return anything - empty array is passed to the useEffect,\r\n *  so single viemodel instance is active throught the whole lifetime of component instance.\r\n * @param vmPropName - name of the prop, used for viewmodel injection.\r\n */\r\nconst withVM = makeWithVM((props, Constructor) => mobx.makeObservable(new Constructor(props)));\r\n\r\nexport { withVM, makeWithVM, IViewModel };","enum TodoStatus {\r\n    Active='active',\r\n    Completed='completed',\r\n}\r\n\r\ninterface ITodoItem {\r\n    name: string;\r\n    id: number;\r\n    status: TodoStatus;\r\n}\r\n\r\nabstract class ITodoDAO {\r\n    public abstract getList() : ITodoItem[];\r\n    public abstract create(item: Omit<ITodoItem, 'id'>) : ITodoItem;\r\n    public abstract update(item: ITodoItem) : ITodoItem;\r\n    public abstract delete(id: number) : void;\r\n}\r\n\r\nexport { ITodoDAO, TodoStatus, ITodoItem };","import { ITodoDAO, ITodoItem } from \"../../todo-mvc/todos.dao\";\r\n\r\nclass TodoDAO extends ITodoDAO {\r\n    public getList(): ITodoItem[] {\r\n        return this.getExistingItems();\r\n    }\r\n    public create(item: Pick<ITodoItem, \"name\" | \"status\">): ITodoItem {\r\n        const existingItems = this.getExistingItems();\r\n\r\n        let id = 1;\r\n        if(existingItems.length){\r\n            id = existingItems[existingItems.length - 1].id + 1;\r\n        }\r\n\r\n        const newTodo = {\r\n            ...item,\r\n            id: id,\r\n        }\r\n\r\n        existingItems.push(newTodo);\r\n        this.saveExistingItems(existingItems);\r\n        return newTodo;\r\n    }\r\n    public update(item: ITodoItem): ITodoItem {\r\n        const existingItems = this.getExistingItems();\r\n        const persistedItem = existingItems.find(x => x.id === item.id);\r\n        if(persistedItem){\r\n            persistedItem.name = item.name;\r\n            persistedItem.status = item.status;\r\n        }\r\n        this.saveExistingItems(existingItems);\r\n        return persistedItem;\r\n    }\r\n    public delete(id: number): void {\r\n        const existingItems = this.getExistingItems();\r\n        const persistedItemIndex = existingItems.findIndex(x => x.id === id);\r\n        existingItems.splice(persistedItemIndex, 1);\r\n        this.saveExistingItems(existingItems);\r\n    }\r\n\r\n    private getExistingItems() {\r\n        const existingCollection = localStorage.getItem('todos');\r\n        let todoList: ITodoItem[] = [];\r\n\r\n        if(existingCollection) {\r\n            todoList = JSON.parse(existingCollection);\r\n        }\r\n\r\n        return todoList.sort((a, b) => a.id - b.id);\r\n    }\r\n\r\n    private saveExistingItems(todos: ITodoItem[]) {\r\n        const stringigied = JSON.stringify(todos);\r\n        localStorage.setItem('todos', stringigied);\r\n    }\r\n}\r\n\r\nexport { TodoDAO };","import * as mobx from 'mobx';\r\nimport { IViewModel } from '../framework-extensions/with-vm';\r\nimport { TodoDAO } from '../boundaries/local-storage/todos.dao';\r\nimport { ITodoDAO, ITodoItem, TodoStatus } from \"./todos.dao\";\r\nimport { createConnect } from '../framework-extensions/create-connect';\r\n\r\n// viewmodel does not depends on specific execution context, therefore set props to 'unknown'\r\nclass TodosVM implements IViewModel<{ status: TodoStatus }> {\r\n    @mobx.observable\r\n    private todoList: ITodoItem[];\r\n\r\n    // we don't have any IoC container plugged in for the application so concrete instance is plugged in explicitely\r\n    constructor(props: { status: TodoStatus }, private readonly todoDao: ITodoDAO = new TodoDAO()) {\r\n        this.todoList = [];\r\n    }\r\n\r\n    @mobx.action\r\n    public initialize() {\r\n        this.todoList = this.todoDao.getList();\r\n    }\r\n\r\n    @mobx.action\r\n    public createTodo = (name: string) => {\r\n        if(!name || name.trim() === '') {\r\n            // do not let to create\r\n            return; \r\n        }\r\n\r\n        const newTodo = this.todoDao.create({\r\n            name: name,\r\n            status: TodoStatus.Active,\r\n        })\r\n        this.todoList.push(newTodo);\r\n    }\r\n\r\n    public getTodoItems = (filter?: TodoStatus) => {\r\n        return this.todoList.filter(x => !filter || x.status === filter) as ReadonlyArray<Readonly<ITodoItem>>;\r\n    }\r\n\r\n    @mobx.action\r\n    public toggleStatus = (id: number) => {\r\n        const targetItem = this.todoList.find(x => x.id === id);\r\n        if(targetItem) {\r\n            switch(targetItem.status){\r\n                case TodoStatus.Active:\r\n                    targetItem.status = TodoStatus.Completed;\r\n                    break;\r\n                case TodoStatus.Completed:\r\n                    targetItem.status = TodoStatus.Active;\r\n                    break;\r\n            }\r\n        }\r\n        \r\n        this.todoDao.update(targetItem);\r\n    }\r\n\r\n    @mobx.action\r\n    public setAllStatus = (newStatus: TodoStatus) => {\r\n        for(const item of this.todoList){\r\n            if(newStatus !== item.status) {\r\n                item.status = newStatus;\r\n                this.todoDao.update(item);\r\n            }\r\n        }\r\n    }\r\n\r\n    @mobx.action\r\n    public removeTodo = (id: number) => {\r\n        const targetItemIndex = this.todoList.findIndex(x => x.id === id);\r\n        this.todoList.splice(targetItemIndex, 1);\r\n        this.todoDao.delete(id);\r\n    }\r\n\r\n    @mobx.action\r\n    public removeCompletedTodos = () => {\r\n        const completedItems = this.todoList.filter(x => x.status === TodoStatus.Completed);\r\n        this.todoList = this.todoList.filter(x => x.status === TodoStatus.Active);\r\n        for(const completedTodo of completedItems){\r\n            this.todoDao.delete(completedTodo.id);\r\n        }\r\n    }\r\n}\r\n\r\nconst connectTodosVM = createConnect(TodosVM);\r\n\r\nexport { TodosVM, connectTodosVM };","import { TodoStatus } from \"./todos.dao\"\r\nimport * as React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connectTodosVM } from \"./todo-mvc.vm\";\r\n\r\ninterface IOwnProps {\r\n    selectedStatus?: TodoStatus;\r\n}\r\n\r\ninterface IContextProps {\r\n    clearCompleted: () => void;\r\n    activeItemsCount: number;\r\n    completedItemsCount: number;\r\n}\r\n\r\nconst dullPluralize = (itemsNumber: number) => {\r\n    return itemsNumber === 1 ? 'item' : 'items';\r\n}\r\n\r\nconst FooterDisconnected = (props: IContextProps & IOwnProps) => {\r\n    return <footer className=\"footer\">\r\n        <span className=\"todo-count\"><strong>{props.activeItemsCount}</strong> {dullPluralize(props.activeItemsCount)} left</span>\r\n        \r\n        <ul className=\"filters\">\r\n            <li>\r\n                <Link to='/' className={!props.selectedStatus ? 'selected' : ''}>All</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/active' className={props.selectedStatus === TodoStatus.Active ? 'selected' : ''}>active</Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/completed' className={props.selectedStatus === TodoStatus.Completed ? 'selected' : ''}>completed</Link>\r\n            </li>\r\n        </ul>\r\n        {props.completedItemsCount \r\n            ? <button className=\"clear-completed\" onClick={props.clearCompleted}>Clear completed</button>\r\n            : null\r\n        }\r\n    </footer>\r\n}\r\n\r\nconst Footer = connectTodosVM(FooterDisconnected, (vm, ownProps: IOwnProps) => {\r\n    return {\r\n        clearCompleted: vm.removeCompletedTodos,\r\n        activeItemsCount: vm.getTodoItems(TodoStatus.Active).length,\r\n        completedItemsCount: vm.getTodoItems(TodoStatus.Completed).length,\r\n    }\r\n});\r\n\r\nexport { Footer };","import * as React from 'react';\r\nimport { connectTodosVM } from './todo-mvc.vm';\r\n\r\ninterface IProps {\r\n    createTodo: (name: string) => void;\r\n}\r\n\r\nconst HeaderDisconnected = (props: IProps) => {\r\n    const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        e.currentTarget.value = '';\r\n    }\r\n\r\n    const handleClick = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if(e.key === 'Enter') {\r\n            const value = e.currentTarget.value;\r\n            e.currentTarget.value = '';\r\n            props.createTodo(value);\r\n        }\r\n        if(e.key === 'Escape') {\r\n            e.currentTarget.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>todos</h1>\r\n            <input \r\n                className=\"new-todo\" \r\n                placeholder=\"What needs to be done?\" \r\n                autoFocus \r\n                onKeyDown={handleClick} \r\n                onBlur={handleBlur} \r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nconst Header = connectTodosVM(HeaderDisconnected, vm => {\r\n    return {\r\n        createTodo: vm.createTodo,\r\n    }\r\n});\r\n\r\nexport { Header };","import { ITodoItem, TodoStatus } from \"../todos.dao\"\r\nimport * as React from 'react';\r\nimport { connectTodosVM } from \"../todo-mvc.vm\";\r\n\r\ninterface IContextProps {\r\n    toggleStatus: () => void;\r\n    removeTodo: () => void;\r\n}\r\n\r\nconst TodoItemDisconnected = (props: IContextProps & ITodoItem) => {\r\n    const className = props.status === TodoStatus.Completed ? 'completed' : '';\r\n    return <li className={className}>\r\n        <div className=\"view\">\r\n            <input className=\"toggle\" type=\"checkbox\" onChange={props.toggleStatus} checked={props.status === TodoStatus.Completed} />\r\n            <label>{props.name}</label>\r\n            <button className=\"destroy\" onClick={props.removeTodo} />\r\n        </div>\r\n    </li>\r\n}\r\n\r\nconst TodoItem = connectTodosVM(TodoItemDisconnected, (vm, ownProps: ITodoItem) => {\r\n    return {\r\n        toggleStatus: () => vm.toggleStatus(ownProps.id),\r\n        removeTodo: () => vm.removeTodo(ownProps.id),\r\n    }\r\n});\r\n\r\nexport { TodoItem };\r\n","import * as React from 'react';\r\nimport { connectTodosVM } from '../todo-mvc.vm';\r\nimport { ITodoItem, TodoStatus } from '../todos.dao';\r\nimport { TodoItem } from './_todo-item';\r\n\r\ninterface IContenxtProps {\r\n    setStatusForAllItems: () => void;\r\n    areAllItemsCompleted: boolean;\r\n    visibleItems: ReadonlyArray<Readonly<ITodoItem>>\r\n}\r\n\r\ninterface IOwnProps {\r\n    status: TodoStatus;\r\n}\r\n\r\nconst TodoListDisconnected = (props: IContenxtProps & IOwnProps) => (\r\n    <section className=\"main\">\r\n        <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" onClick={props.setStatusForAllItems} />\r\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\r\n        <ul className=\"todo-list\">\r\n            {props.visibleItems.map(x => <TodoItem key={x.id} {...x} />)}\r\n        </ul>\r\n    </section>\r\n)\r\n\r\nconst TodoList = connectTodosVM(TodoListDisconnected, (vm, ownProps: IOwnProps) => {\r\n    const hasActiveItems = vm.getTodoItems(TodoStatus.Active).length;\r\n    const hasCompletedItems = vm.getTodoItems(TodoStatus.Completed).length;\r\n\r\n    const areAllItemsCompleted = hasCompletedItems && !hasActiveItems;\r\n\r\n    return {\r\n        setStatusForAllItems: () => vm.setAllStatus(areAllItemsCompleted ? TodoStatus.Active : TodoStatus.Completed),\r\n        areAllItemsCompleted: areAllItemsCompleted,\r\n        visibleItems: vm.getTodoItems(ownProps.status),\r\n    }\r\n});\r\n\r\n\r\nexport { TodoList };","import * as React from 'react';\r\nimport { withVM } from '../framework-extensions/with-vm';\r\nimport { TodosVM } from './todo-mvc.vm';\r\nimport { TodoStatus } from './todos.dao';\r\nimport { Footer } from './_footer';\r\nimport { Header } from './_header';\r\nimport { TodoList } from './_todo-list/todo-list';\r\n\r\nconst TodoMvcDisconnected = (props: { status: TodoStatus }) => {\r\n    return <section className=\"todoapp\">\r\n        <Header />\r\n        <TodoList status={props.status} />\r\n        <Footer selectedStatus={props.status} />\r\n    </section>\r\n};\r\n\r\nconst TodoMVC = withVM(TodoMvcDisconnected, TodosVM);\r\n\r\nexport { TodoMVC }","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { TodoMVC } from './todo-mvc/todo-mvc';\r\n\r\nconst basePath = process.env.basePath;\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        {/* use string for simplicity. in real life application should be extracted into runtime settings  */}\r\n        <BrowserRouter basename={basePath}>\r\n            <Route \r\n                path=\"/:todostatus?\"\r\n                render={({ match }) => {\r\n                    return <>\r\n                        <TodoMVC status={match.params.todostatus} />\r\n                    </>;\r\n                  }}>\r\n            </Route>\r\n            \r\n            <footer className=\"info\">\r\n                <p>Double-click to edit a todo</p>\r\n                <p>Created by <a href=\"http://todomvc.com\">Dani Jug</a></p>\r\n                <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\r\n            </footer>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('todomvc-root')\r\n);"],"names":["useRef","useEffect","useState","React.createContext","React.useContext","mobxReact.useObserver","React.createElement","React","mobx.makeObservable","mobx.observable","mobx.action","ReactDOM","React.StrictMode"],"mappings":"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"}